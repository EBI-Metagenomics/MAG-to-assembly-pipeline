params {
    // required files
    gut_mapping           = "$projectDir/data/known_and_found_gut_genomes.tsv"

    // names for generated intermidiate files 
    input_accessions      = 'input_accessions.tsv'
    catalogue_metadata    = 'all_catalog_metadata.tsv'

    // user input args
    batch_size            = 250
    previous_table        = null
    processed_acc         = null
    external_input        = null
    external_metadata     = null
    cleanup               = true
    output_path           = "$PWD/results"

    max_memory            = '100.GB'
    max_cpus              = 1
    max_time              = '240.h'
}

profiles {
    codon_slurm { 
        includeConfig 'conf/codon_slurm.config' 
    }
    local {
        includeConfig 'conf/local.config' 
    }
    local_arm {
        includeConfig 'conf/local_arm.config' 
    }
} 

includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
